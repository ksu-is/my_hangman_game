# Need to import random module
import random

# Create a function to greet player by selected name
def welcome():
    user_name=input("What is your game name?: ").capitalize()

    if user_name.isalpha():
        print("Hi", user_name,"! We're glad to have you here today :) \n You will have 7 attempts to correctly guess letters in the word, which will be generated by a computer.")

    else:
        print("Please enter a name using only letters.")
        user_name=input("What is your game name?: ").capitalize()
        print("Hi", user_name,"! We're glad to have you here today :) \n You will have 6 attempts to correctly guess letters in the word, which will be generated by a computer.")

# Create a function that asks the user if they would like to play again
def play_again(difficulty):
    user_response = input("Would you like to play the game again? Enter \"y\" or \"n\" : ").lower()

    if user_response == "y":
        run_game(difficulty + 2)
    elif user_response == "n":
        print("See you next time!")
    else:
        print("invalid input")
        user_response = input("Would you like to play the game again? Enter \"y\" or \"n\" : ").lower()
        
# Create a function that generates a random word for the user / player to guess
def random_word(min_length, max_length):
    with open('words.txt', 'r') as file:
        word_list = file.read().split()
        valid_words = []
        for word in word_list:
            if len(word) >= min_length and len(word) <= max_length:
                valid_words.append(word)

        if len(valid_words) == 0:
            return "NONE"

        return random.choice(valid_words).upper()

# Define function to run the game
def run_game(difficulty):
    welcome()
    alphabet = "abcdefghijklmnopqrstuvwxyz7".upper()
    game_word= random_word(difficulty + 2, difficulty + 4)
    user_guesses=[]
    user_tries = 7
    guessed = False
    print("")
    print("There are", len(game_word),"letters in the word and it is a noun.")

#While loop is created to allow the user to continue guessing
#For when the user attempts to guess a single letter
    while guessed == False and user_tries > 0:
        print("You have", str(user_tries), "tries remaining.")
        guess = input("Guess a letter in the word, or if you feel confident, guess the whole word.\nTo view letters that you already guessed, enter \"7\":").upper()
        if len(guess)== 1:
            if guess == "7":
                print(user_guesses)
            elif guess not in alphabet:
                print("That is an invalid input. Please enter letters only.")
            elif guess in user_guesses:
                print("You have already tried that letter.")
            elif guess not in game_word:
                print("Sorry, that letter is not in the word.")
                user_guesses.append(guess)
                user_tries-=1
            elif guess in game_word:
                print("Excellent! You correctly guessed a letter!")
                user_guesses.append(guess)
            else:
                print("Invalid input. Try again.")

      #For when the user attempts to guess the whole word
        elif len(guess) == len(game_word):
            if guess == game_word:
                print("Wow! You're Good! You correctly guessed the entire word.")
                guessed=True
            else:
                print("Sorry, that's not the right word.")

                user_tries-=1

        #For when the user enters the wrong amount of letters for the word. For example, if they enter 5 letters for a 4 letter word.
        else:
            print("The length of your guess should either be 1 letter or the length of the word")
            user_tries-=1

        status= ""
        if guessed == False:
            for letter in game_word:
                if letter in user_guesses:
                    status += letter + " "
                else:
                    status += '_ '
            print(status)

        if status == game_word:
            print("Awesome job! You correctly guessed the word!")
            guessed == True
            break
#ASCII art to show the hangman game. Art from https://gist.github.com/chrishorton/8510732aa9a80a03c829b09f12e20d9c
        elif user_tries == 0:
            print('''  +---+
  |   |
  O   |
 /|\\  |
 / \\  |
      |
=========''')
            print("You've exhausted all of your tries without guessing the word! :( The correct word was", game_word.capitalize())
            break

        elif user_tries==6:
            print('''+---+
|   |
    |
    |
    |
    |
=========''')
        elif user_tries==5:
            print( '''+---+
|   |
O   |
    |
    |
    |
=========''')
        elif user_tries==4:
            print('''+---+
|   |
O   |
|   |
    |
    |
=========''')
        elif user_tries==3:
            print(''' +---+
 |   |
 O   |
/|   |
     |
     |
=========''')
        elif user_tries==2:
            print('''+---+
 |   |
 O   |
/|\\  |
     |
     |
=========''')

        elif user_tries==1:
            print('''+---+
 |   |
 O   |
/|\\  |
/    |
     |
=========''')
        elif user_tries==0:
            print('''  +---+
 |   |
 O   |
/|\\  |
/ \\  |
     |
=========''')

    play_again(difficulty)

run_game(0)